(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{533:function(t,s,a){"use strict";a.r(s);var e=a(17),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"subquery"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#subquery"}},[t._v("#")]),t._v(" Subquery")]),t._v(" "),s("h2",{attrs:{id:"서브쿼리"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#서브쿼리"}},[t._v("#")]),t._v(" 서브쿼리")]),t._v(" "),s("p",[t._v("서브쿼리는 복잡한 쿼리를 실행할 수 있게 도와준다. 서브쿼리가 없었다면 쿼리를 여러번 호출하여 데이터를 찾아야했을 것이다. 사용되는 용어가 몇가지 있다.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("용어")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("뜻")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("subquery(nested query or inner query)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("SELECT, INSERT, UPDATE, DELETE에 포함된 query")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("outer query(main query)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("subquery를 포함하는 query")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("subquery")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("()안에 기술된다")])])])]),t._v(" "),s("div",{staticClass:"language-SQL extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DISTINCT")]),t._v(" empl_id \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" works_on\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" empl_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" proj_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" proj_id \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" works_on \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" empl_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"in"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#in"}},[t._v("#")]),t._v(" IN")]),t._v(" "),s("ul",[s("li",[t._v("v IN (v1, v2, v3,...): v가 (v1, v2, v3,...) 중에 하나와 값이 같다면 TRUE를 return 한다.")]),t._v(" "),s("li",[t._v("(v1, v2, v3,...)는 명시적인 값들의 칩합일 수도 있고 subquery(set of multiset)의 결과일 수도 있다.")]),t._v(" "),s("li",[t._v("v NOT IN (v1, v2, v3,...): v가 (v1, v2, v3,...)의 모든 값이 다르다면 TRUE를 return 한다.")])]),t._v(" "),s("div",{staticClass:"language-SQL extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" employee\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DISTINCT")]),t._v(" empl_id \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" works_on\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" empl_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" proj_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" proj_id \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" works_on \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" empl_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-SQL extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" employee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DISTINCT")]),t._v(" empl_id \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" works_on\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" empl_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" proj_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" proj_id \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" works_on \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" empl_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" DSINCT_E\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DSINCT_E"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("empl_id "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("같은 결과이지만 다른 쿼리")])]),t._v(" "),s("h2",{attrs:{id:"exists"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exists"}},[t._v("#")]),t._v(" EXISTS")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("용어")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("뜻")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("correlated query")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("subquery가 바깥쪽 query의 attribute를 참조할 때 correlated subquery라 부른다")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("EXISTS")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("subquery의 결과가 최소 하나의 row라고 있다면 TRUE를 반환")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("NOT EXISTS")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("subquery의 결과가 단 하나의 row라도 없다면 TRUE를 반환")])])])]),t._v(" "),s("div",{staticClass:"language-SQL extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" P"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" P"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" project P\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" works_on W\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" W"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("proj_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" P"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" W"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("empl_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"any"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#any"}},[t._v("#")]),t._v(" ANY")]),t._v(" "),s("ul",[s("li",[t._v("v comparison_operator ANY (subquery) : subquery가 반환한 결과들 중에 단 하나라도 v와의 비교 연산이 TRUE라면 TRUE를 반환한다.")]),t._v(" "),s("li",[t._v("SOME도 ANY과 같은 역할을 한다.")]),t._v(" "),s("li",[t._v("<>는 != 과 같다.")])]),t._v(" "),s("div",{staticClass:"language-SQL extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" E"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" E"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" E"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("salary\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" department D"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" employee E\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" D"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("leader_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" E"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" E"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("salary "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ANY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" salary\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" employee\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" D"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("leader_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" dept_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" E"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dept_id\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("리더보다 높은 연봉을 받는 부서원이 있는 리더의 아이디와 이름, 연봉을 조회하는 쿼리")])]),t._v(" "),s("div",{staticClass:"language-SQL extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" E"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" E"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" E"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("salary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MAX")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" employee \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" dept_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" E"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dept_id\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" dept_max_salary\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" department D"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" employee E\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" D"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("leader_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" E"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" E"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("salary "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ANY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" salary\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" employee\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" D"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("leader_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" dept_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" E"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dept_id\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("위 쿼리에서 그러면 그 부서의 최고 연봉은 얼마인지 조회하는 쿼리")])]),t._v(" "),s("h2",{attrs:{id:"all"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#all"}},[t._v("#")]),t._v(" ALL")]),t._v(" "),s("ul",[s("li",[t._v("v comparison_operator ALL (subquery) :  subquery가 반환한 결과들과 v와의 비교 연산이 모두 TRUE라면 TRUE를 반환한다.")]),t._v(" "),s("li",[t._v("<>는 != 과 같다.")])]),t._v(" "),s("div",{staticClass:"language-SQL extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DISTINCT")]),t._v(" E"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" E"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" E"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" employee E"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" works_on W\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" E"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" W"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("empl_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" W"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("proj_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" proj_id \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" works_on\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" empl_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"정리"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#정리"}},[t._v("#")]),t._v(" 정리")]),t._v(" "),s("h3",{attrs:{id:"in-vs-exists"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#in-vs-exists"}},[t._v("#")]),t._v(" IN vs EXISTS")]),t._v(" "),s("p",[t._v("예전에는 둘의 성능차이로 써야되는 시기에 대해 이야기하는 논의가 많았지만 요즘에는 성능이 많이 좋아져서 차이가 거의 없는 것으로 알려짐")])])}),[],!1,null,null,null);s.default=r.exports}}]);