(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{582:function(t,e,s){"use strict";s.r(e);var r=s(44),v=Object(r.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"http"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" HTTP")]),t._v(" "),s("h3",{attrs:{id:"protocol"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#protocol"}},[t._v("#")]),t._v(" "),s("strong",[t._v("Protocol")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("통신 규약")])]),t._v(" "),s("li",[s("p",[t._v("보내고 받는 것을 해석하여 처리하는 것")])])]),t._v(" "),s("h3",{attrs:{id:"http-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-2"}},[t._v("#")]),t._v(" "),s("strong",[t._v("HTTP")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("HyperText Transfer Protocol")])]),t._v(" "),s("li",[s("p",[t._v("Request")]),t._v(" "),s("ul",[s("li",[t._v("userAgent에서 기기와 브라우저를 구분")])])]),t._v(" "),s("li",[s("p",[t._v("Response")]),t._v(" "),s("ul",[s("li",[t._v("상태 코드값을 넘긴다(ex. 200, 404, 500....)")]),t._v(" "),s("li",[t._v("body에는 HTML과 JavaScript 뿐이다.")]),t._v(" "),s("li",[t._v("JS는 인라인 컴파일러이기 때문에 웹에 용이하다.\n"),s("ul",[s("li",[t._v("그때 그때 컴파일한다.")])])])])]),t._v(" "),s("li",[s("p",[t._v("Connectionless - 서버에 연결하고, 요청후 응답을 받으면 연결을 끊는다.")]),t._v(" "),s("ul",[s("li",[t._v("장점: 불특정 다수를 대상으로 하는 서비스에 적합")]),t._v(" "),s("li",[t._v("단점: 클라이언트의 이전 상태를 알 수 없음. (stateless), 예를 들어 과거에 로그인을 성공했더라도 로그 정보를 유지할 수 없다. => cookie를 이용해서 이 문제를 해결")])])]),t._v(" "),s("li",[s("p",[t._v("HTTP는 "),s("strong",[t._v("전송 프로토콜")]),t._v("이고 URI(Uniform Resource Identifiers)는 "),s("strong",[t._v("자원의 위치를 알려주기 위한 프로토콜")]),t._v("이다.")])])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://shlee0882.tistory.com/107",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[t._v("HTTP 개념 설명 블로그")]),s("OutboundLink")],1)])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("http 통신 구조")]),t._v(" "),s("ul",[s("li",[t._v("참고링크 "),s("a",{attrs:{href:"https://developer.mozilla.org/ko/docs/Web/HTTP/Messages",target:"_blank",rel:"noopener noreferrer"}},[t._v("----\x3e MDN Document - HTTP Structure"),s("OutboundLink")],1)])])]),t._v(" "),s("li",[s("p",[t._v("http 상태 코드")]),t._v(" "),s("ul",[s("li",[t._v("참고링크 "),s("a",{attrs:{href:"https://developer.mozilla.org/ko/docs/Web/HTTP/Status",target:"_blank",rel:"noopener noreferrer"}},[t._v("----\x3e MDN Document - HTTP status code"),s("OutboundLink")],1)])])])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("자주 쓰이는 응답코드")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("200 - OK")]),t._v(", 서버가 요청을 제대로 처리함.")]),t._v(" "),s("li",[s("code",[t._v("301 - Moved Permanently")]),t._v(", 해당 URI가 다른 주소로 바뀌었을 때.")]),t._v(" "),s("li",[s("code",[t._v("400 - Bad Request")]),t._v(", request에 포함된 보내는 데이터가 잘못 보내어 졌을 때.")]),t._v(" "),s("li",[s("code",[t._v("401 - Unauthorized")]),t._v(", 유저가 해당 요청을 진행하려면 로그인을 필요하다는 것을 나타내는 코드.")]),t._v(" "),s("li",[s("code",[t._v("403 - Forbidden")]),t._v(", 서버가 요청을 거부 (권한이 없기 때문), 예를 들어 구독자만 볼 수 있는 데이터 요청했을 때.")]),t._v(" "),s("li",[s("code",[t._v("404 - Not Found")]),t._v(", 요청한 자원(uri)이 서버에 존재하지 않음.")]),t._v(" "),s("li",[s("code",[t._v("505 - Internal Server Error")]),t._v(", 서버에서 에러가 났을 때 사용되는 코드.")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("웹 실행 순서는 웹 서버에서 전달 받은 html과 js 중에 html을 먼저 화면에 뿌리고 나서 js를 한줄씩 실행하고 화면에 뿌려준다.")])]),t._v(" "),s("h3",{attrs:{id:"keep-alive"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive"}},[t._v("#")]),t._v(" "),s("strong",[t._v("Keep-alive")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Keep-alive 설정을 하면, 지정된 시간동안 연결을 끊지 않고 요청")]),t._v("을 계속해서 보낼 수 있다.")])]),t._v(" "),s("h3",{attrs:{id:"http-request-구조"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-request-구조"}},[t._v("#")]),t._v(" "),s("strong",[t._v("HTTP Request 구조")])]),t._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:"https://velog.io/@teddybearjung/HTTP-%EA%B5%AC%EC%A1%B0-%EB%B0%8F-%ED%95%B5%EC%8B%AC-%EC%9A%94%EC%86%8C",target:"_blank",rel:"noopener noreferrer"}},[t._v("참고 블로그"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[t._v("크게 3부분으로 구성 Start Line / Headers / Body")])])]),t._v(" "),s("ol",[s("li",[t._v("Start Line")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("예시) "),s("code",[t._v("GET /search HTTP/1.1")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("GET")]),t._v(" : "),s("strong",[t._v("HTTP Method")]),t._v("에 해당 / "),s("code",[t._v("request")]),t._v("가 의도한 "),s("code",[t._v("action")]),t._v("을 정의하는 파트")]),t._v(" "),s("ul",[s("li",[t._v("HTTP Methods: "),s("code",[t._v("GET")]),t._v(", "),s("code",[t._v("POST")]),t._v(", "),s("code",[t._v("PUT")]),t._v(", "),s("code",[t._v("DELETE")]),t._v(", "),s("code",[t._v("OPTIONS")]),t._v(" 등이 있다.")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("/search")]),t._v(" : "),s("strong",[t._v("Request target")])]),t._v(" "),s("ul",[s("li",[t._v("해당 request가 전송되는 목표 uri")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("HTTP/1.1")]),t._v(": "),s("strong",[t._v("HTTP Version")])])])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("Headers")])]),t._v(" "),s("ul",[s("li",[t._v("request에 대한 추가정보를 담고 있는 부분")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("  Accept: _/_\n  Accept-Encoding: gzip, deflate\n  Connection: keep-alive\n  Content-Type: application/json\n  Content-Length: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("257")]),t._v("\n  Host: google.com\n  User-Agent: HTTPie/0.9.3\n")])])]),s("ul",[s("li",[t._v("자주 사용되는 Header 정보\n"),s("ul",[s("li",[t._v("Host: 요청이 전송되는 target의 host url")]),t._v(" "),s("li",[t._v("User-Agent: 요청을 보내는 클라이언트에 대한 정보")]),t._v(" "),s("li",[t._v("Accept: 해당 요청이 받을 수 있는 응답(response) 타입")]),t._v(" "),s("li",[t._v("Connection: "),s("code",[t._v("keep-alive")]),t._v("로 설정하면 한 번에 하나씩 요청/응답이 아닌 불러올 파일들을 모두 한 번에 받을 수 있다.")]),t._v(" "),s("li",[t._v("Content-Type: 요청이 보내는 메시지 body의 타입.")]),t._v(" "),s("li",[t._v("Content-Length: 메세지 body의 길이")])])])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("Body")])]),t._v(" "),s("ul",[s("li",[t._v("클라이언트 요청(request)의 실제 내용")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("POST /payment-sync HTTP/1.1\nAccept: application/json\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nContent-Length: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("83")]),t._v("\nContent-Type: application/json\nHost: intropython.com\nUser-Agent: HTTPie/0.9.3\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"imp_uid"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"imp_1234567890"')]),t._v(",\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"merchant_uid"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order_id_8237352"')]),t._v(",\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"status"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"paid"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"tcp-ip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip"}},[t._v("#")]),t._v(" "),s("strong",[t._v("TCP/IP")])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://brunch.co.kr/@wangho/6",target:"_blank",rel:"noopener noreferrer"}},[t._v("TCP/IP에 대한 설명 블로그 - 카카오 기획자"),s("OutboundLink")],1)])]),t._v(" "),s("blockquote",[s("p",[t._v("TCP/IP 는 패킷 통신 방식의 인터넷 프로토콜인 IP (인터넷 프로토콜)와 전송 조절 프로토콜인 TCP (전송 제어 프로토콜)로 이루어져 있다.")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("TCP는 IP 위에서 동작하는 프로토콜로 "),s("strong",[t._v("**데이터의 전달을 보증하고 보낸 순서대로 받게 해준다.**")])])]),t._v(" "),s("li",[s("p",[t._v("FTP ( File Transfer Protocol ) [킹무위키](")])])])])}),[],!1,null,null,null);e.default=v.exports}}]);