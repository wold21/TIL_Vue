(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{521:function(s,t,a){"use strict";a.r(t);var e=a(17),r=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"trigger"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#trigger"}},[s._v("#")]),s._v(" Trigger")]),s._v(" "),t("h2",{attrs:{id:"트리거란"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#트리거란"}},[s._v("#")]),s._v(" 트리거란?")]),s._v(" "),t("ol",[t("li",[s._v("(총의) 방아쇠")]),s._v(" "),t("li",[s._v("(반응 사건을 유발한) 계기")]),s._v(" "),t("li",[s._v("촉발시키다")]),s._v(" "),t("li",[s._v("작동시키다")])]),s._v(" "),t("h3",{attrs:{id:"sql에서-trigger란"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql에서-trigger란"}},[s._v("#")]),s._v(" SQL에서 Trigger란?")]),s._v(" "),t("p",[s._v("데이터 변경이 생겼을 때 즉, insert, update, delete가 발생했을 때 이것이 계기가 되어 자동적으로 실행되는 프로시저를 의미한다.")]),s._v(" "),t("h3",{attrs:{id:"예시"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#예시"}},[s._v("#")]),s._v(" 예시")]),s._v(" "),t("h4",{attrs:{id:"_1-사용자의-닉네임-변경-이력을-저장하는-트리거를-작성해-보자"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-사용자의-닉네임-변경-이력을-저장하는-트리거를-작성해-보자"}},[s._v("#")]),s._v(" 1. 사용자의 닉네임 변경 이력을 저장하는 트리거를 작성해 보자")]),s._v(" "),t("div",{staticClass:"language-SQL extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delimiter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRIGGER")]),s._v(" log_user_nickname_trigger "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 트리거명")]),s._v("\nBEFORE "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 즉, 업데이트 이전에 동작하는 트리거")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" users "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR EACH ROW")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- users의 row에 변경이 일어날 때")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BEGIN")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" users_log "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("OLD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" OLD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nickname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("now")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("END")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delimiter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("blockquote",[t("p",[s._v("OLD"),t("br"),s._v("\nupdate 되기 전의 tuple을 가리킴"),t("br"),s._v("\ndelete된 tuple을 가리킴")])]),s._v(" "),t("h4",{attrs:{id:"_2-사용자가-마트에서-상품을-구매할-때마다-지금까지-누적된-구매-비용을-구하는-트리거를-작성해-보자"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-사용자가-마트에서-상품을-구매할-때마다-지금까지-누적된-구매-비용을-구하는-트리거를-작성해-보자"}},[s._v("#")]),s._v(" 2. 사용자가 마트에서 상품을 구매할 때마다 지금까지 누적된 구매 비용을 구하는 트리거를 작성해 보자")]),s._v(" "),t("div",{staticClass:"language-SQL extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delimiter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRIGGER")]),s._v(" sum_buy_prices_trigger\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AFTER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- insert 후에 동작")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" buy "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR EACH ROW")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BEGIN")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DECLARE")]),s._v(" total "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DECLARE")]),s._v(" user_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" NEW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("user_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("price"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" total buy "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" user_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" user_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" user_buy_stats "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" price_sum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" total "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" user_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" user_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("END")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delimiter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("blockquote",[t("p",[s._v("NEW"),t("br"),s._v("\ninsert된 tuple을 가리킴\nupdate된 후의 tuple을 가리킴")])]),s._v(" "),t("h3",{attrs:{id:"trigger를-정의할-때-알고-있으면-좋은-내용"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#trigger를-정의할-때-알고-있으면-좋은-내용"}},[s._v("#")]),s._v(" trigger를 정의할 때 알고 있으면 좋은 내용")]),s._v(" "),t("h4",{attrs:{id:"_1-update-insert-delete등을-한번에-감지하도록-설정가능하다-mysql은-불가능"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-update-insert-delete등을-한번에-감지하도록-설정가능하다-mysql은-불가능"}},[s._v("#")]),s._v(" 1. update, insert, delete등을 한번에 감지하도록 설정가능하다 (MySQL은 불가능)")]),s._v(" "),t("div",{staticClass:"language-SQL extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRIGGER")]),s._v(" avg_empl_salary_trigger\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AFTER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("OR")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("OR")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DELETE")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" employee\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR EACH ROW")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXECUTE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FUNCTION")]),s._v(" update_avg_empl_salary"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("h4",{attrs:{id:"_2-row단위가-아니라-statement-단위로-트리거가-실행될-수-있도록-할-수-있다-mysql은-불가능"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-row단위가-아니라-statement-단위로-트리거가-실행될-수-있도록-할-수-있다-mysql은-불가능"}},[s._v("#")]),s._v(" 2. row단위가 아니라 statement 단위로 트리거가 실행될 수 있도록 할 수 있다 (MySQL은 불가능)")]),s._v(" "),t("p",[s._v("그런데 만약 다음과 같은 쿼리가 호출된다고 가정해보자. 만약 해당되는 인원이 10명인 경우 트리거는 10번 실행되게 될 것이다.")]),s._v(" "),t("div",{staticClass:"language-SQL extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" employee "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" salary "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" salary "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" dept_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1003")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("n개의 row가 해당 된다면 n번 트리거가 실행되는 것인데 이때 불필요한 호출을 방지하기 위해 트리거를 다음과 같이 선언할 수 있다.")]),s._v(" "),t("div",{staticClass:"language-SQL extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRIGGER")]),s._v(" avg_empl_salary_trigger\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AFTER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("OR")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("OR")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DELETE")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" employee\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR")]),s._v(" EACH STATEMENT "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 실행 단위 기준으로 트리거가 실행된다.")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXECUTE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FUNCTION")]),s._v(" update_avg_empl_salary"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("h4",{attrs:{id:"_3-트리거를-발생시킬-디테일한-조건을-지정할-수-있다-mysql은-불가능"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-트리거를-발생시킬-디테일한-조건을-지정할-수-있다-mysql은-불가능"}},[s._v("#")]),s._v(" 3. 트리거를 발생시킬 디테일한 조건을 지정할 수 있다 (MySQL은 불가능)")]),s._v(" "),t("div",{staticClass:"language-SQL extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRIGGER")]),s._v(" log_user_nickname_trigger\n  BEFORE "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" users\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR EACH ROW")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHEN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NEW"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nickname "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IS")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DISTINCT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" OLD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nickname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXECUTE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FUNCTION")]),s._v(" log_user_nickname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("h2",{attrs:{id:"주의-사항"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#주의-사항"}},[s._v("#")]),s._v(" 주의 사항")]),s._v(" "),t("p",[s._v("소스 코드로는 발견할 수 없는 로직이기 때문에 어떤 동작이 일어나는지 파악하기 어렵고 문제가 생겼을 때 대응하기 어렵다 프로시저는 소스 코드에 등록 후 호출하면서 사용할 수 있지만 트리거는 가시적이지 않다는 점이 큰 단점이다. 또 트리거을 너무 많이 작성하여 사용하고 있는데 트리거끼리 영향을 미치는 트리거라면 확인하기가 정말 어렵다.")]),s._v(" "),t("ul",[t("li",[s._v("과도한 트리거 사용은 DB에 부담을 주고 응답을 느리게 만든다")]),s._v(" "),t("li",[s._v("디버깅이 어렵다")]),s._v(" "),t("li",[s._v("문서 정리가 특히나 중요하다")])]),s._v(" "),t("h2",{attrs:{id:"마무리"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#마무리"}},[s._v("#")]),s._v(" 마무리")]),s._v(" "),t("p",[s._v("회사에서 일할 때 트리거를 만져본 적이 있었다. 검색엔진 동기화에 대한 코드였는데 예를 들면 메인 DB와 검색엔진 만을 위한 DB가 있다고 했을 때 메인 DB에 데이터가 insert, update, delete가 되면 똑같은 동작을 검색 엔진 DB에 해줘야하는 작업이 있었다. (정확한 로직은 보안상 말할 수 없을 것 같지만.) 그당시에는 나에게 꽤나 참신했던 기술이었다. 아무튼 언젠가 또 사용해볼 날이 오면 좋겠다.")])])}),[],!1,null,null,null);t.default=r.exports}}]);