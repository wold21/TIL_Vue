(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{548:function(a,t,s){"use strict";s.r(t);var e=s(17),n=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"mustache"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mustache"}},[a._v("#")]),a._v(" Mustache")]),a._v(" "),t("h2",{attrs:{id:"mustache란"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mustache란"}},[a._v("#")]),a._v(" Mustache란?")]),a._v(" "),t("p",[a._v("템플릿 엔진으로써 Loop와 같은 로직 구문이 존재하지 않으므로, Logic-Less Templates라고 불린다. 사용 예로는 백엔드 단에서 넘겨받은 데이터를 웹에서 뿌려줄 때 편리하게 뿌려줄 때 사용했다. 예를 들면 10줄 짜리의 데이터를 테이블에 그려줘야할 때 아래와 같이 표현할 수 있다.")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[a._v("// 백단에서 넘어온 데이터 변수명\n"),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#results")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n\n// 이렇게 data속성에도 값을 추가할 수 있다. \n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("tr")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("data-userid")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("key")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n\n\t// results안에 있는 key값을 results의 길이 만큼 그릴 수 있다.\n\t"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("td")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("key")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("td")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("tr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/results")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n")])])]),t("p",[a._v("앞의 예시를 포함해 추가로 몇가지 사용법을 알아보자.")]),a._v(" "),t("h3",{attrs:{id:"data-load"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#data-load"}},[a._v("#")]),a._v(" Data Load")]),a._v(" "),t("h4",{attrs:{id:"results와-results"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#results와-results"}},[a._v("#")]),a._v(" #results와 /results")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#results")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n\t...\n"),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/results")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n\n// results 받은 값이 false가 아니고 빈 List가 아닌 경우에 \n// #results 와 /results 사이에 적힌 내용이 유효하게 된다.\n")])])]),t("h4",{attrs:{id:"넘겨-받은-값이-없을-때-핸들링"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#넘겨-받은-값이-없을-때-핸들링"}},[a._v("#")]),a._v(" 넘겨 받은 값이 없을 때 핸들링")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#results")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n\t...\n"),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/results")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("^")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("results")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n\t값이 없습니다.\n"),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/results")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n\n//#results의 값이 null일 경우 ^results의 구간이 로드된다.\n")])])]),t("h4",{attrs:{id:"key가-함수일-경우"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#key가-함수일-경우"}},[a._v("#")]),a._v(" key가 함수일 경우")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#wrapped")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n\t"),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v(" gle\n"),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/wrapped")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v('\n\n// Data \n{ \n\t"name":"goo", \n\t"wrapped": function(text, render) { \n\t\treturn render(text)\n\t} \n} \n// 결과 "google"\n')])])]),t("h4",{attrs:{id:"원하는-key의-값만-보여주고-싶을-때"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#원하는-key의-값만-보여주고-싶을-때"}},[a._v("#")]),a._v(" 원하는 key의 값만 보여주고 싶을 때")]),a._v(" "),t("div",{staticClass:"language-handlebars extra-class"},[t("pre",{pre:!0,attrs:{class:"language-handlebars"}},[t("code",[t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("#isGoogle?")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v(" \n\t"),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token handlebars language-handlebars"}},[t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("{{")]),t("span",{pre:!0,attrs:{class:"token block keyword"}},[a._v("/isGoogle?")]),t("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[a._v("}}")])]),a._v(' \n\n// Data \n{ \n\t"isGoogle?":{"name":"yes!!"} \n} \n\n// 결과 "yes!!"\n')])])]),t("hr"),a._v(" "),t("p",[a._v("참고 블로그")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://engineer-mole.tistory.com/123",target:"_blank",rel:"noopener noreferrer"}},[a._v("Link"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);